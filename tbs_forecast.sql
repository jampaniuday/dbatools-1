-- File: tbs_forecast.sql
-- Description: OEM Tablespace Forecast
-- Author: Raul Ibanez (raul @ dbajunior.com)
-- Gracias a Facundo por retocar la query para evitar los grupos
 
ITH rl AS (
 SELECT
 --G.COMPOSITE_TARGET_NAME,
 --CASE G.COMPOSITE_TARGET_NAME
 -- WHEN 'prod_group' THEN '80'
 -- WHEN 'nonprod_group' THEN '90'
 -- ELSE '90'
 --END
 '85' THRESHOLD,
 T.TARGET_NAME,
 M.KEY_VALUE TABLESPACE,
 REGR_SLOPE(M.VALUE_AVERAGE, ((M.ROLLUP_TIMESTAMP - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400)) SLOPE,
 REGR_INTERCEPT(M.VALUE_AVERAGE, ((M.ROLLUP_TIMESTAMP - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400)) YINTERCEPT,
 M.METRIC_GUID,
 M.TARGET_GUID,
 C.VALUE CURRENT_PERC
 FROM
 MGMT_METRICS_1DAY M,
 MGMT_TARGETS T,
 --MGMT$GROUP_FLAT_MEMBERSHIPS G,
 MGMT_CURRENT_METRICS C
 WHERE
 -- Metric D34E49F7B030C38C5DBEB6C62D4CAFA8 => TBS SPACE USED (MB) / Collected every week
 M.METRIC_GUID = HEXTORAW('D34E49F7B030C38C5DBEB6C62D4CAFA8') AND
 -- Metric 3E6F70DB22758B7B9756EF342180E7BB => TBS SPACE USED (%)
 C.METRIC_GUID = HEXTORAW('3E6F70DB22758B7B9756EF342180E7BB') AND
 M.KEY_VALUE = C.KEY_VALUE AND
 M.ROLLUP_TIMESTAMP >= SYSDATE-60 AND
 M.TARGET_GUID = T.TARGET_GUID AND
 T.TARGET_GUID = C.TARGET_GUID AND
 --G.MEMBER_TARGET_GUID = M.TARGET_GUID AND
 --G.COMPOSITE_TARGET_NAME = 'prod_group' AND -- Filter OEM Group
 --T.TARGET_NAME NOT LIKE '%dr%' AND -- Filter Target Name
 --G.COMPOSITE_TARGET_TYPE = 'composite' AND
 M.KEY_VALUE NOT LIKE 'UNDOTBS%' AND -- Filter Tablespace Name
 M.KEY_VALUE NOT LIKE '%TEMP%'
 GROUP BY
 T.TARGET_NAME, M.KEY_VALUE, M.METRIC_GUID, M.TARGET_GUID, C.VALUE
) SELECT
 TARGET_NAME,
 TABLESPACE,
 THRESHOLD "THRESHOLD %",
 -- SLOPE,
 -- YINTERCEPT,
 ROUND(CURRENT_PERC,2) "CURR%",
 ROUND(((((((SYSDATE+31) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)* CURRENT_PERC) /
 ((((SYSDATE) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)),2) "NEXT1M%",
 ROUND(((((((SYSDATE+138) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)* CURRENT_PERC) /
 ((((SYSDATE) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)),2) "NEXT6M%",
 ROUND(((((((SYSDATE+365) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)* CURRENT_PERC) /
 ((((SYSDATE) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)),2) "NEXT12M%",
 ROUND((((SYSDATE) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT) "CURR(MB)",
 ROUND((((SYSDATE+31) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT) "NEXT1M(MB)",
 ROUND((((SYSDATE+138) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT) "NEXT6M(MB)",
 ROUND((((SYSDATE+365) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT) "NEXT12M(MB)",
 '+' || TO_CHAR(ROUND(((100*((((SYSDATE+365) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)/(THRESHOLD-10))-
 (100*((((SYSDATE) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)/CURRENT_PERC))/1024))||'GB' "REQ 12M"
FROM rl
WHERE
 SLOPE > 0 AND
 ROUND(((((((SYSDATE+365) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)* CURRENT_PERC) /
 ((((SYSDATE) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)),2) > THRESHOLD
ORDER BY
 ROUND(((100*((((SYSDATE+365) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)/(THRESHOLD-10))-
 (100*((((SYSDATE) - to_date('2017_05_01 00:00:00','YYYY-MM-DD HH24:MI:SS')) * 86400) * SLOPE + YINTERCEPT)/CURRENT_PERC))/1024) DESC;
 
 
 
 
 
-- Ojo, usa el AWR, necesitais licencia del diagnostic...
-- No es tan completa como la del OEM pero tunenando la query se puede hacer casi lo mismo
UNDEFINE num_days
WITH TBS AS (
  SELECT
    UPPER(tbsstat.TSNAME) TABLESPACE_NAME,
	BLOCK_SIZE,
    REGR_SLOPE(TABLESPACE_USEDSIZE, (TO_DATE(TO_CHAR (END_INTERVAL_TIME, 'YYYY-MON-DD HH24:MI:SS'), 'YYYY-MON-DD HH24:MI:SS') -
      TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) * 86400) SLOPE,
	REGR_INTERCEPT(TABLESPACE_USEDSIZE, (TO_DATE(TO_CHAR (END_INTERVAL_TIME, 'YYYY-MON-DD HH24:MI:SS'), 'YYYY-MON-DD HH24:MI:SS')  - 
      TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) * 86400) YINTERCEPT
  FROM
    DBA_HIST_SNAPSHOT snap,
    DBA_HIST_TBSPC_SPACE_USAGE usage,
    DBA_HIST_TABLESPACE_STAT tbsstat,
	DBA_TABLESPACES tbs
  WHERE
    snap.SNAP_ID = tbsstat.SNAP_ID
    AND tbsstat.SNAP_ID = usage.SNAP_ID
    AND tbsstat.TS# = usage.TABLESPACE_ID
	AND usage.TABLESPACE_ID = tbsstat.TS#
    AND UPPER(tbsstat.TSNAME) LIKE UPPER('%&tablespace_name_default_all%')
  GROUP BY 
    UPPER(tbsstat.TSNAME),
	BLOCK_SIZE
)
SELECT
  TABLESPACE_NAME,
  SYSDATE+&&num_days "DATE",
  ROUND(((((SYSDATE+&&num_days) - TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) *
             86400) * SLOPE + YINTERCEPT)*BLOCK_SIZE/1024/1024/1024, 2) "ESTMD SIZE (MB)"
FROM TBS
ORDER BY 1
/
 
 
 
set pages 9000 lines 350
UNDEFINE num_days
WITH TBS AS (
  SELECT
    UPPER(tbsstat.TSNAME) TABLESPACE_NAME,
	BLOCK_SIZE,
    REGR_SLOPE(TABLESPACE_USEDSIZE, (TO_DATE(TO_CHAR (END_INTERVAL_TIME, 'YYYY-MON-DD HH24:MI:SS'), 'YYYY-MON-DD HH24:MI:SS') -
      TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) * 86400) SLOPE,
	REGR_INTERCEPT(TABLESPACE_USEDSIZE, (TO_DATE(TO_CHAR (END_INTERVAL_TIME, 'YYYY-MON-DD HH24:MI:SS'), 'YYYY-MON-DD HH24:MI:SS')  - 
      TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) * 86400) YINTERCEPT
  FROM
    DBA_HIST_SNAPSHOT snap,
    DBA_HIST_TBSPC_SPACE_USAGE usage,
    DBA_HIST_TABLESPACE_STAT tbsstat,
	DBA_TABLESPACES tbs
  WHERE
    snap.SNAP_ID = tbsstat.SNAP_ID
    AND tbsstat.SNAP_ID = usage.SNAP_ID
    AND tbsstat.TS# = usage.TABLESPACE_ID
	AND usage.TABLESPACE_ID = tbsstat.TS#
    AND UPPER(tbsstat.TSNAME) LIKE UPPER('%&tablespace_name_default_all%')
  GROUP BY 
    UPPER(tbsstat.TSNAME),
	BLOCK_SIZE
)
SELECT
  TABLESPACE_NAME,
ROUND(((((SYSDATE+31) - TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) *
             86400) * SLOPE + YINTERCEPT)*BLOCK_SIZE/1024/1024, 2) "1M ESTMD SIZE (MB)",
ROUND(((((SYSDATE+69) - TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) *
             86400) * SLOPE + YINTERCEPT)*BLOCK_SIZE/1024/1024, 2) "3M ESTMD SIZE (MB)",
ROUND(((((SYSDATE+138) - TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) *
             86400) * SLOPE + YINTERCEPT)*BLOCK_SIZE/1024/1024, 2) "6 M ESTMD SIZE (MB)",			 
  ROUND(((((SYSDATE+365) - TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) *
             86400) * SLOPE + YINTERCEPT)*BLOCK_SIZE/1024/1024, 2) "12M ESTMD SIZE (MB)"			 
FROM TBS
ORDER BY 1
/
 
 
 
 
 